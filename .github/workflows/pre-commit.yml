name: Pre-commit Checks

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

# Cancel in-progress runs for the same workflow on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre-commit:
    name: Run Pre-commit Hooks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better context

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit

      - name: Cache pre-commit hooks
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            pre-commit-

      - name: Run pre-commit on all files
        run: pre-commit run --all-files --show-diff-on-failure --color=always

      - name: Annotate failures
        if: failure()
        run: |
          echo "::error title=Pre-commit Failed::One or more pre-commit hooks failed. Please run 'pre-commit run --all-files' locally and fix the issues."

  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest

    permissions:
      security-events: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install security tools
        run: |
          pip install bandit detect-secrets

      # Bandit security scan
      - name: Run Bandit security scan
        run: |
          bandit -r src/ -f json -o bandit-report.json || true
          bandit -r src/ -f screen
        continue-on-error: true

      # Detect secrets scan
      - name: Run detect-secrets scan
        run: |
          detect-secrets scan --baseline .secrets.baseline --exclude-files '.*\.lock$'

      # Gitleaks scan (if available)
      - name: Run Gitleaks scan
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_ENABLE_SUMMARY: true
        continue-on-error: true

      - name: Upload Bandit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bandit-security-report
          path: bandit-report.json
          retention-days: 30

  check-hooks-installed:
    name: Verify Pre-commit Installation
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for pre-commit config
        run: |
          if [ ! -f ".pre-commit-config.yaml" ]; then
            echo "::error title=Missing Pre-commit Config::.pre-commit-config.yaml not found"
            exit 1
          fi
          echo "‚úì Pre-commit configuration found"

      - name: Validate pre-commit config
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install and validate
        run: |
          pip install pre-commit
          pre-commit validate-config .pre-commit-config.yaml
          echo "‚úì Pre-commit configuration is valid"

      - name: Check secrets baseline exists
        run: |
          if [ ! -f ".secrets.baseline" ]; then
            echo "::warning title=Missing Secrets Baseline::.secrets.baseline not found. Run: detect-secrets scan --baseline .secrets.baseline"
          else
            echo "‚úì Secrets baseline found"
          fi

  # Comment on PR with pre-commit instructions if checks fail
  pr-comment:
    name: Comment on PR
    runs-on: ubuntu-latest
    needs: [pre-commit, security-scan]
    if: failure() && github.event_name == 'pull_request'

    permissions:
      pull-requests: write

    steps:
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const message = `## ‚ö†Ô∏è Pre-commit Checks Failed

            Some pre-commit hooks failed. Please fix the issues locally before merging.

            ### üîß How to Fix

            1. **Install pre-commit hooks** (if not already installed):
               \`\`\`bash
               # Linux/macOS
               ./scripts/setup-precommit.sh

               # Windows
               scripts\\setup-precommit.bat

               # Any platform
               python scripts/setup-precommit.py
               \`\`\`

            2. **Run hooks locally**:
               \`\`\`bash
               pre-commit run --all-files
               \`\`\`

            3. **Fix the issues** shown in the output

            4. **Commit and push** your fixes:
               \`\`\`bash
               git add .
               git commit -m "fix: resolve pre-commit issues"
               git push
               \`\`\`

            ### üìö Documentation

            - [Quick Reference](.pre-commit-quick-reference.md)
            - [Full Setup Guide](docs/PRE_COMMIT_SETUP.md)
            - [Troubleshooting](docs/PRE_COMMIT_SETUP.md#troubleshooting)

            ---
            *This comment was automatically generated by the pre-commit workflow.*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
